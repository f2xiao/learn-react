<mxfile host="app.diagrams.net" modified="2022-07-22T21:47:50.049Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36" etag="n-uRcGTFRIrFGzdv8uPv" version="20.2.0" type="github" pages="29">
  <diagram id="Eo-MJG3Geo6U9HWaCAQ4" name="01-1 JSX">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="DJ0mANGAoLpJyBZBnyyK-5" value="" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="230" y="160" width="390" height="130" as="geometry" />
        </mxCell>
        <mxCell id="GgxnAB8W06gAhrEfYePA-1" value="HTML with JS in {}" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="270" y="195" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GgxnAB8W06gAhrEfYePA-2" value="" style="endArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="GgxnAB8W06gAhrEfYePA-1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="310" y="265" as="sourcePoint" />
            <mxPoint x="500" y="225" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="GgxnAB8W06gAhrEfYePA-3" value="compiled" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="410" y="185" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="GgxnAB8W06gAhrEfYePA-4" value="JS" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="510" y="210" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="DJ0mANGAoLpJyBZBnyyK-1" value="JSX is a syntax extension of JS" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="242.5" y="325" width="177.5" height="35" as="geometry" />
        </mxCell>
        <mxCell id="DJ0mANGAoLpJyBZBnyyK-6" value="Babel" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="550" y="295" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="DJ0mANGAoLpJyBZBnyyK-7" value="simple JSX," style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="242.5" y="360" width="72.5" height="35" as="geometry" />
        </mxCell>
        <mxCell id="DJ0mANGAoLpJyBZBnyyK-8" value="nested(complex) JSX" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="242.5" y="400" width="127.5" height="30" as="geometry" />
        </mxCell>
        <mxCell id="DJ0mANGAoLpJyBZBnyyK-9" value="comments in JSX" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="242.5" y="440" width="102.5" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="paieloeWrsnzrt-ZjNVY" name="01-2 React&#39;s rendering API">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="3mt5i1HOysyWbOD0Hkj6-1" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; text-align: start; background-color: rgb(255, 255, 255);&quot;&gt;ReactDOM.render(componentToRender, targetNode)&lt;/span&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="170" y="180" width="430" height="50" as="geometry" />
        </mxCell>
        <mxCell id="3mt5i1HOysyWbOD0Hkj6-2" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;componentToRender = JSX ele, functional component, stateful/stateless component&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="85" y="270" width="710" height="40" as="geometry" />
        </mxCell>
        <mxCell id="3mt5i1HOysyWbOD0Hkj6-3" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;targetNode=HTMLNODE, ex: document.getElementById(&#39;root&#39;)&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="85" y="330" width="560" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="mb96ZKDMgfEnHgTAUdYf" name="01-3 conventions in JSX">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="MgDMceds4RdghHLCX3k6-1" value="use className to define an HTML calss in JSX" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="170" y="160" width="270" height="50" as="geometry" />
        </mxCell>
        <mxCell id="MgDMceds4RdghHLCX3k6-2" value="use camelCase for HTML attributes and event references" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="210" width="330" height="30" as="geometry" />
        </mxCell>
        <mxCell id="MgDMceds4RdghHLCX3k6-3" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;&amp;nbsp;Any JSX element can be written with a self-closing tag, and every element must be closed.&amp;nbsp;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="260" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="MgDMceds4RdghHLCX3k6-4" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&amp;nbsp;But there is no way to include anything in the &lt;/span&gt;&lt;span style=&quot;font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important; font-size: 16.2px;&quot;&gt;&lt;font face=&quot;Roboto Mono, monospace&quot;&gt;self-closing tag&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="330" width="550" height="50" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="BHqIijLhPNndav-jzsjz" name="02-1 (stateless) functional comp">
    <mxGraphModel dx="1212" dy="737" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="CxyhMBl6r6sQwa05iiF8-2" value="" style="endArrow=classic;html=1;rounded=0;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="370" y="304.5" as="sourcePoint" />
            <mxPoint x="470" y="304.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="CxyhMBl6r6sQwa05iiF8-3" value="props" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="280" y="290" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="CxyhMBl6r6sQwa05iiF8-5" value="JSX" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="500" y="290" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="6j-GvJsBo-dMbnkxlp5R-1" value="componentName = function (){&lt;br&gt;return JSX}" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="240" y="230" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="4Dn3phRQweipqalMzyOH-1" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(248, 249, 250); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;componentName = function (props){&lt;/span&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(248, 249, 250); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(248, 249, 250); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;return JSX contains props.dataName}&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="295" y="350" width="225" height="50" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="ydKKTWdMuI7tSlY-n6b7" name="02-2 - (stateless)comp w/ ES6 class">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="546aYvV42i8R8RiWNW9Q-1" value="Stateless Component" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="300" y="420" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="546aYvV42i8R8RiWNW9Q-3" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.427;entryY=1.133;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="546aYvV42i8R8RiWNW9Q-1" target="gRjXp6dxkXTeKHmdEv62-5" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="135" y="280" as="sourcePoint" />
            <mxPoint x="115" y="340" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="gRjXp6dxkXTeKHmdEv62-1" value="React.Component" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
          <mxGeometry x="295" y="260" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="gRjXp6dxkXTeKHmdEv62-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="gRjXp6dxkXTeKHmdEv62-1" vertex="1">
          <mxGeometry y="26" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="gRjXp6dxkXTeKHmdEv62-4" value="+ constructor(props)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;fontColor=#000000;" parent="gRjXp6dxkXTeKHmdEv62-1" vertex="1">
          <mxGeometry y="34" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="gRjXp6dxkXTeKHmdEv62-5" value="+ render(): return JSX&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="gRjXp6dxkXTeKHmdEv62-1" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="EYOYJ-gW1YSmQ694XkcB-1" value="does not use internal state" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="440" y="435" width="160" height="30" as="geometry" />
        </mxCell>
        <mxCell id="EYOYJ-gW1YSmQ694XkcB-2" value="class ComponentName extends React.Component{}" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="240" y="530" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="EYOYJ-gW1YSmQ694XkcB-3" value="+ state: {}" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="1" vertex="1">
          <mxGeometry x="475" y="290" width="70" height="26" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="eCdco4PguwVkqWRGOjIO" name="03-1 comp with composition">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Mn6sxatXF_zceILKTcfw-1" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px;&quot;&gt;When React encounters&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;a custom HTML tag that references another component (a component name wrapped in&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;&amp;lt; /&amp;gt;&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&amp;nbsp;like in this example), it renders the markup for that component in the location of the tag.&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="160" y="550" width="550" height="100" as="geometry" />
        </mxCell>
        <mxCell id="Mn6sxatXF_zceILKTcfw-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontColor=#000000;" parent="1" source="Mn6sxatXF_zceILKTcfw-1" target="Mn6sxatXF_zceILKTcfw-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Mn6sxatXF_zceILKTcfw-3" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;To render a component as a child in a React component, you include the component name written as a custom HTML tag in the JSX.&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="470" width="550" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Mn6sxatXF_zceILKTcfw-4" value="&lt;pre style=&quot;box-sizing: border-box; text-shadow: none; overflow: auto; font-family: Consolas, Monaco, &amp;quot;Andale Mono&amp;quot;, &amp;quot;Ubuntu Mono&amp;quot;, monospace; font-size: 18px; display: block; padding: 1em; margin: 0.5em 0px; line-height: 1.5; word-break: normal; overflow-wrap: normal; background: var(--primary-background); border: none; border-radius: 0px; hyphens: none; tab-size: 4; text-align: left; word-spacing: 0px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot; tabindex=&quot;0&quot; class=&quot;language-jsx&quot;&gt;&lt;code style=&quot;box-sizing: border-box; text-shadow: none; font-family: Consolas, Monaco, &amp;quot;Andale Mono&amp;quot;, &amp;quot;Ubuntu Mono&amp;quot;, monospace; font-size: 1em; padding: 0px; background: none; border-radius: 0px; overflow-wrap: normal; hyphens: none; line-height: 1.5; tab-size: 4; text-align: left; word-break: normal; word-spacing: normal;&quot; class=&quot;language-jsx&quot;&gt;return (&lt;br&gt; &amp;lt;App&amp;gt;&lt;br&gt;  &amp;lt;Navbar /&amp;gt;&lt;br&gt;  &amp;lt;Dashboard /&amp;gt;&lt;br&gt;  &amp;lt;Footer /&amp;gt;&lt;br&gt; &amp;lt;/App&amp;gt;&lt;br&gt;)&lt;/code&gt;&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="80" width="210" height="260" as="geometry" />
        </mxCell>
        <mxCell id="Mn6sxatXF_zceILKTcfw-5" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;Component with Composition&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="360" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Mn6sxatXF_zceILKTcfw-6" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;create a&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box; font-family: Lato, sans-serif; font-size: 18px; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;parent&lt;/em&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;component which renders other components as&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box; font-family: Lato, sans-serif; font-size: 18px; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;children&lt;/em&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="400" width="550" height="50" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="7HQr32Nu4WOg2IXcQPQD" name="03-2 nested components">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="zWZIrLA23nMH8mSdbvk4-4" value="" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="235" y="150" width="380" height="240" as="geometry" />
        </mxCell>
        <mxCell id="zWZIrLA23nMH8mSdbvk4-2" value="" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="310" y="205" width="230" height="130" as="geometry" />
        </mxCell>
        <mxCell id="zWZIrLA23nMH8mSdbvk4-1" value="child&amp;nbsp;" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="360" y="245" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="zWZIrLA23nMH8mSdbvk4-3" value="parent&amp;nbsp;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="480" y="305" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="zWZIrLA23nMH8mSdbvk4-5" value="grandparent" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="540" y="360" width="75" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="PpH-It0cTAEEukXqCwz9" name="03-3 composition with ES6 class">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Ycx4XI4chI2T5v1PLcm5-1" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;Rendering ES6 style class components within other components is no different than rendering the simple components&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="200" y="280" width="550" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="gGWu-8oIMw6ose6FZa7Y" name="03-4 render ">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="1uRe0fAAiRpn0c3of4W5-1" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;ReactDOM.render(&amp;lt;ComponentToRender /&amp;gt;, targetNode)&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="200" y="310" width="470" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="s7hwgAXf5W586IEruqFc" name="04-1 props">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Q53VSUY6RxTVlS_5cTfR-1" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;In React, you can pass props, or properties, to child components.&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="320" width="550" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="j6eA7QUYTiK4PW6xaZLn" name="04-2 props usage">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="l_JWoMxQQ0RnskSdVhHC-1" value="" style="endArrow=classic;html=1;rounded=0;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="212.5" y="134.5" as="sourcePoint" />
            <mxPoint x="312.5" y="134.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="l_JWoMxQQ0RnskSdVhHC-2" value="props" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="122.5" y="120" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="l_JWoMxQQ0RnskSdVhHC-3" value="JSX" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="342.5" y="120" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="tje5433va55gYkNPUr_3-1" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;Pass an Array as Props&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="240" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="o8nQkDehsNbYBb0ttOdZ-1" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-weight: 700; text-align: center; background-color: rgb(255, 255, 255);&quot;&gt;Use Default Props&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="380" width="190" height="30" as="geometry" />
        </mxCell>
        <mxCell id="o8nQkDehsNbYBb0ttOdZ-2" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;MyComponent.defaultProps = { location: &#39;San Francisco&#39; }&lt;/font&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="430" width="387.5" height="30" as="geometry" />
        </mxCell>
        <mxCell id="o8nQkDehsNbYBb0ttOdZ-3" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;Override Default Props&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="490" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="o8nQkDehsNbYBb0ttOdZ-4" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important; background-color: rgb(255, 255, 255);&quot;&gt;Use PropTypes to Define the Props You Expect&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="560" width="410" height="30" as="geometry" />
        </mxCell>
        <mxCell id="o8nQkDehsNbYBb0ttOdZ-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontColor=#000000;" parent="1" source="o8nQkDehsNbYBb0ttOdZ-1" target="o8nQkDehsNbYBb0ttOdZ-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="blKcyl00hzi_v-Aj6yuJ-1" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;Access Props Using this.props in ES6 class comp&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="77.5" y="660" width="430" height="30" as="geometry" />
        </mxCell>
        <mxCell id="blKcyl00hzi_v-Aj6yuJ-2" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;Ex: if an ES6 class component has a prop called&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;data&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;, you write&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;{this.props.data}&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&amp;nbsp;in JSX.&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="122.5" y="720" width="550" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Fa6rZh-agKivJw9_1JFk-1" value="&lt;b&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;Pass props to stateless functional comp&lt;/font&gt;&lt;/b&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="80" y="70" width="330" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Fa6rZh-agKivJw9_1JFk-2" value="&lt;pre style=&quot;text-align: left; background: var(--primary-background); box-sizing: border-box; text-shadow: none; overflow: auto; font-family: Consolas, Monaco, &amp;quot;Andale Mono&amp;quot;, &amp;quot;Ubuntu Mono&amp;quot;, monospace; padding: 1em; margin-top: 0.5em; margin-bottom: 0.5em; line-height: 1.5; word-break: normal; overflow-wrap: normal; border: none; border-radius: 0px; hyphens: none; tab-size: 4;&quot; tabindex=&quot;0&quot; class=&quot;language-jsx&quot;&gt;&lt;code style=&quot;box-sizing: border-box; text-shadow: none; font-family: Consolas, Monaco, &amp;quot;Andale Mono&amp;quot;, &amp;quot;Ubuntu Mono&amp;quot;, monospace; font-size: 1em; padding: 0px; background: none; border-radius: 0px; overflow-wrap: normal; hyphens: none; line-height: 1.2; tab-size: 4; word-break: normal; word-spacing: normal;&quot; class=&quot;language-jsx&quot;&gt;&amp;lt;ParentComponent&amp;gt;&lt;br&gt;  &amp;lt;ChildComponent colors={[&quot;green&quot;, &quot;blue&quot;, &quot;red&quot;]} /&amp;gt;&lt;br&gt;&amp;lt;/ParentComponent&amp;gt;&lt;/code&gt;&lt;/pre&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="120" y="280" width="370" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Fa6rZh-agKivJw9_1JFk-3" value="&lt;pre style=&quot;text-align: left; box-sizing: border-box; text-shadow: none; overflow: auto; font-family: Consolas, Monaco, &amp;quot;Andale Mono&amp;quot;, &amp;quot;Ubuntu Mono&amp;quot;, monospace; padding: 1em; margin-top: 0.5em; margin-bottom: 0.5em; line-height: 1.5; word-break: normal; overflow-wrap: normal; border: none; border-radius: 0px; hyphens: none; tab-size: 4;&quot; tabindex=&quot;0&quot; class=&quot;language-jsx&quot;&gt;&lt;code style=&quot;box-sizing: border-box; text-shadow: none; font-family: Consolas, Monaco, &amp;quot;Andale Mono&amp;quot;, &amp;quot;Ubuntu Mono&amp;quot;, monospace; padding: 0px; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 0px; overflow-wrap: normal; hyphens: none; line-height: 1.2; tab-size: 4; word-break: normal; word-spacing: normal;&quot; class=&quot;language-jsx&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;(props) =&amp;gt; &amp;lt;h1&amp;gt;Hello, {props.user}!&amp;lt;/h1&amp;gt;&lt;/font&gt;&lt;/code&gt;&lt;/pre&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="122.5" y="170" width="280" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Fa6rZh-agKivJw9_1JFk-4" value="&lt;pre style=&quot;text-align: left; background: var(--primary-background); box-sizing: border-box; text-shadow: none; overflow: auto; font-family: Consolas, Monaco, &amp;quot;Andale Mono&amp;quot;, &amp;quot;Ubuntu Mono&amp;quot;, monospace; padding: 1em; margin-top: 0.5em; margin-bottom: 0.5em; line-height: 1.5; word-break: normal; overflow-wrap: normal; border: none; border-radius: 0px; hyphens: none; tab-size: 4;&quot; tabindex=&quot;0&quot; class=&quot;language-js&quot;&gt;&lt;code style=&quot;box-sizing: border-box; text-shadow: none; font-family: Consolas, Monaco, &amp;quot;Andale Mono&amp;quot;, &amp;quot;Ubuntu Mono&amp;quot;, monospace; font-size: 1em; padding: 0px; background: none; border-radius: 0px; overflow-wrap: normal; hyphens: none; line-height: 1.2; tab-size: 4; word-break: normal; word-spacing: normal;&quot; class=&quot;language-js&quot;&gt;MyComponent&lt;span style=&quot;box-sizing: border-box; text-shadow: none !important;&quot; class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;propTypes &lt;span style=&quot;box-sizing: border-box; background: none; text-shadow: none !important;&quot; class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;box-sizing: border-box; text-shadow: none !important;&quot; class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span style=&quot;box-sizing: border-box; text-shadow: none !important;&quot; class=&quot;token literal-property property&quot;&gt;handleClick&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; background: none; text-shadow: none !important;&quot; class=&quot;token operator&quot;&gt;:&lt;/span&gt; PropTypes&lt;span style=&quot;box-sizing: border-box; text-shadow: none !important;&quot; class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;func&lt;span style=&quot;box-sizing: border-box; text-shadow: none !important;&quot; class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;isRequired &lt;span style=&quot;box-sizing: border-box; text-shadow: none !important;&quot; class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=12;" parent="1" vertex="1">
          <mxGeometry x="120" y="610" width="450" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="baDr3MKfl5f1q9pNv1TW" name="04-3 terminology ">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="kccLaMpRVfcUpmk6DDt7-1" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;A&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box; font-family: Lato, sans-serif; font-size: 18px; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;stateless functional component&lt;/em&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&amp;nbsp;is any function you write which accepts props and returns JSX.&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="130" y="170" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="kccLaMpRVfcUpmk6DDt7-2" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;A&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box; font-family: Lato, sans-serif; font-size: 18px; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;stateless component&lt;/em&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;, on the other hand, is a class that extends&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;React.Component&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;, but does not use internal state&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="320" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="kccLaMpRVfcUpmk6DDt7-3" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;a&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box; font-family: Lato, sans-serif; font-size: 18px; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;stateful component&lt;/em&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&amp;nbsp;is a class component that does maintain its own internal state.&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="110" y="450" width="550" height="50" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="iuzBB_JeK6lc59-x1Cc0" name="05 - stateful component">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="lmiAohyQo69lN-FE1zX2-1" value="React.Component" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
          <mxGeometry x="305" y="30" width="160" height="86" as="geometry" />
        </mxCell>
        <mxCell id="lmiAohyQo69lN-FE1zX2-2" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="lmiAohyQo69lN-FE1zX2-1" vertex="1">
          <mxGeometry y="26" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="lmiAohyQo69lN-FE1zX2-3" value="+ constructor(props)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="lmiAohyQo69lN-FE1zX2-1" vertex="1">
          <mxGeometry y="34" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="lmiAohyQo69lN-FE1zX2-5" value="+ render(): return JSX&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="lmiAohyQo69lN-FE1zX2-1" vertex="1">
          <mxGeometry y="60" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="lmiAohyQo69lN-FE1zX2-4" value="+ state: {}" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="1" vertex="1">
          <mxGeometry x="465" y="73" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-1" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;create state in a React component by declaring a&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;state&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;property on the component class in its&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;constructor&lt;/code&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="190" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-2" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;can access to the&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;state&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&amp;nbsp;object throughout the life component with this.state&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="300" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-3" value="Create" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="140" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-4" value="Access" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="270" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-5" value="Operations" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="360" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-8" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;update it, render it in your UI, and pass it as props to child components&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="410" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-9" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;state&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px;&quot;&gt;allows you to track important data in your app and render a UI in response to changes in this data&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="590" width="570" height="60" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-10" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;&amp;nbsp;React uses what is called a virtual DOM, to keep track of changes behind the scenes.&amp;nbsp;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="490" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-11" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;When state data updates, it triggers a re-render of the components using that data - including child components that received the data as a prop.&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="690" width="550" height="60" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-12" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;React updates the actual DOM, but only where necessary.&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="790" width="490" height="30" as="geometry" />
        </mxCell>
        <mxCell id="347cUuz558gsX2UDVAB_-13" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;state&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;is completely encapsulated, or local to that component, unless you pass state data to a child component as&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;props&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="850" width="550" height="50" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="O8aaW8XNrt_6tRIbpG-s" name="06 - state">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Yk8sqEzYievHdHHS6H4T-2" value="access data: this.state.dataName" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="360" y="280" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Yk8sqEzYievHdHHS6H4T-3" value="access inside the return of render(): {this.state.dataName}" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="360" y="360" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Yk8sqEzYievHdHHS6H4T-4" value="access and manipulate in the render before return" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="360" y="440" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="pqf5mmqyJqpMpsTcozOA-1" value="initialize inside the constructor function: this.state={}&lt;span style=&quot;color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px&quot;&gt;%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22this.state%3D%7B%7D%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Brounded%3D0%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22340%22%20y%3D%22420%22%20width%3D%22120%22%20height%3D%2230%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&lt;/span&gt;&lt;span style=&quot;color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px&quot;&gt;%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22this.state%3D%7B%7D%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Brounded%3D0%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22340%22%20y%3D%22420%22%20width%3D%22120%22%20height%3D%2230%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="360" y="190" width="120" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="GCCixi4ryjbMaLbX3nnP" name="07 - setState">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="2qBqx0_pNmlnq5VS_R0S-1" value="change or update comp&#39;s state with setState: this.setState({dataName: newValue})" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="300" y="230" width="260" height="80" as="geometry" />
        </mxCell>
        <mxCell id="7ndcyVxuP85e0DluyfcG-1" value="call this method within its component class" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="310" y="340" width="260" height="50" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="mlP-fshjchkDHZLL-gsB" name="08 - bind">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="3_Ywpsvx1E9KfdpLCOaM-1" value="inside the constructor:&lt;br&gt;this.methodName = this.methodName.bind(this)" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="120" y="340" width="250" height="60" as="geometry" />
        </mxCell>
        <mxCell id="OCO8WogIP5cT4X2bDMbL-1" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;A class method typically needs to use the&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;this&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;keyword so it can access properties on the class (such as&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;state&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;and&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;props&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;) inside the scope of the method.&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="130" y="190" width="550" height="60" as="geometry" />
        </mxCell>
        <mxCell id="S1kjcs9BaM5A5luvutBB-1" value="this will rebind all the &#39;this&#39; on the instance method to the componet" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="390" y="355" width="240" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="mWEmL9dCTT82JdxmVFHl" name="09 - pass prev State">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="8cUvQ2WJm2E4nJ2E-0vP-1" value="change or update comp&#39;s state with setState: this.setState((state, props)=&amp;gt;({dataName: state.dataName+newValue&lt;br&gt;}))" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="300" y="230" width="260" height="80" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="PN_C99G5TWZh-Np_bcfA" name="09-1 counter">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="O2JF_g8AtxPp9037FLX2-1" value="access data: this.state.dataName" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="360" y="290" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="O2JF_g8AtxPp9037FLX2-2" value="access inside the return of render(): {this.state.dataName}" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="360" y="370" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="O2JF_g8AtxPp9037FLX2-3" value="access and manipulate in the render before return" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="360" y="450" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="O2JF_g8AtxPp9037FLX2-4" value="initialize inside the constructor function: this.state={}&lt;span style=&quot;color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px&quot;&gt;%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22this.state%3D%7B%7D%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Brounded%3D0%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22340%22%20y%3D%22420%22%20width%3D%22120%22%20height%3D%2230%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&lt;/span&gt;&lt;span style=&quot;color: rgba(0 , 0 , 0 , 0) ; font-family: monospace ; font-size: 0px&quot;&gt;%3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22this.state%3D%7B%7D%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Brounded%3D0%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22340%22%20y%3D%22420%22%20width%3D%22120%22%20height%3D%2230%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="360" y="200" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="O2JF_g8AtxPp9037FLX2-5" value="write methods that set state" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="360" y="540" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="O2JF_g8AtxPp9037FLX2-6" value="attach the method as event handlers to trigger the methods" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="360" y="620" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="O2JF_g8AtxPp9037FLX2-7" value="need to add binding of this in the method to access the state" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="510" y="540" width="120" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="vTtyx5O_sHmPoBVPvTwK" name="10 - controlled input">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="ZqInGBcCudh0TBwgglm0-1" value="&amp;lt;input value={this.state.dataName} onChange={this.handleChange} /&amp;gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="520" y="630" width="240" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ZqInGBcCudh0TBwgglm0-4" value="View" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="600" y="600" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ZqInGBcCudh0TBwgglm0-18" value="React.component" style="html=1;" parent="1" vertex="1">
          <mxGeometry x="230" y="370" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="6jRybzABccXOGlvwSdfy-1" value="ControlledInput" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
          <mxGeometry x="70" y="494" width="280" height="112" as="geometry" />
        </mxCell>
        <mxCell id="6jRybzABccXOGlvwSdfy-2" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="6jRybzABccXOGlvwSdfy-1" vertex="1">
          <mxGeometry y="26" width="280" height="8" as="geometry" />
        </mxCell>
        <mxCell id="6jRybzABccXOGlvwSdfy-3" value="+ constructor(props)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="6jRybzABccXOGlvwSdfy-1" vertex="1">
          <mxGeometry y="34" width="280" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6jRybzABccXOGlvwSdfy-8" value="+ handleChange(){this.setState()}" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="6jRybzABccXOGlvwSdfy-1" vertex="1">
          <mxGeometry y="60" width="280" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6jRybzABccXOGlvwSdfy-5" value="+ render(): return JSX which contains input tag&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="6jRybzABccXOGlvwSdfy-1" vertex="1">
          <mxGeometry y="86" width="280" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6jRybzABccXOGlvwSdfy-11" value="this.state={dataName: initialValue}&lt;br&gt;this.handleChange=this.handleChange.bind(this)" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="360" y="519" width="300" height="50" as="geometry" />
        </mxCell>
        <mxCell id="6jRybzABccXOGlvwSdfy-13" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="6jRybzABccXOGlvwSdfy-1" target="ZqInGBcCudh0TBwgglm0-18" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="390" y="590" as="sourcePoint" />
            <mxPoint x="440" y="540" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="M1ucAGBq1asge6k30VpM-1" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;form control elements for text input, such as&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;input&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;and&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;textarea&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;, maintain their own state in the DOM as the user types&lt;/span&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="120" width="550" height="60" as="geometry" />
        </mxCell>
        <mxCell id="M1ucAGBq1asge6k30VpM-2" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;With React, you can move this mutable state into a React component&#39;s&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;state&lt;/code&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="210" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="M1ucAGBq1asge6k30VpM-3" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;so React controls the value of that input field&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="290" width="380" height="30" as="geometry" />
        </mxCell>
        <mxCell id="M1ucAGBq1asge6k30VpM-5" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(248, 249, 250); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;constructor(props)&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="360" y="488" width="130" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="QhWn-RbuZXUBT7CTB33b" name="11 - controlled form">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-2" value="View" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="480" y="580" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-3" value="React.component" style="html=1;" parent="1" vertex="1">
          <mxGeometry x="267.5" y="240" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-4" value="ControlledForm" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
          <mxGeometry x="130" y="370" width="290" height="177" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-5" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="Al0C1dXJ_gn36nzKNQj2-4" vertex="1">
          <mxGeometry y="26" width="290" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-6" value="+ constructor(props)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="Al0C1dXJ_gn36nzKNQj2-4" vertex="1">
          <mxGeometry y="34" width="290" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-7" value="+ handleChange(){this.setState()}" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="Al0C1dXJ_gn36nzKNQj2-4" vertex="1">
          <mxGeometry y="60" width="290" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-11" value="+ handleSubmit(event){&#xa;              event.preventDefault;&#xa;              this.setState(state=&gt;({}))&#xa;    }" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="Al0C1dXJ_gn36nzKNQj2-4" vertex="1">
          <mxGeometry y="86" width="290" height="65" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-8" value="+ render(): return JSX which contains a form&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="Al0C1dXJ_gn36nzKNQj2-4" vertex="1">
          <mxGeometry y="151" width="290" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-9" value="this.state={dataName: initialValue}&lt;br&gt;this.handleChange=this.handleChange.bind(this)&lt;br&gt;this.handleSubmit=this.handleSubmit.bind(this)" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="467.5" y="400" width="300" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-10" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="Al0C1dXJ_gn36nzKNQj2-4" target="Al0C1dXJ_gn36nzKNQj2-3" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="427.5" y="460" as="sourcePoint" />
            <mxPoint x="477.5" y="410" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-14" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="362.5" y="625" width="357.5" height="225" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-15" value="&amp;lt;/form&amp;gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="395" y="810" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-1" value="&amp;lt;input value={this.state.dataName} onChange={this.handleChange} /&amp;gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="420" y="680" width="235" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-16" value="&amp;lt;button type=&quot;submit&quot; &amp;gt;Submit&amp;lt;/button&amp;gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="420" y="740" width="235" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Al0C1dXJ_gn36nzKNQj2-17" value="&amp;lt;form onSubmit={this.handleSubmit}&amp;gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="387.5" y="640" width="240" height="30" as="geometry" />
        </mxCell>
        <mxCell id="eR2dE0bZJ_hrFHQRihi3-1" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(248, 249, 250); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;constructor(props)&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="467.5" y="370" width="120" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="4_Y79xlbtu0eEbdHfCEG" name="12 - state as props">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="NWFrmzto-wJViv7szAEe-1" value="React.component" style="html=1;" parent="1" vertex="1">
          <mxGeometry x="310" y="110" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="NWFrmzto-wJViv7szAEe-2" value="Navbar" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
          <mxGeometry x="410" y="230" width="300" height="86" as="geometry" />
        </mxCell>
        <mxCell id="NWFrmzto-wJViv7szAEe-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="NWFrmzto-wJViv7szAEe-2" vertex="1">
          <mxGeometry y="26" width="300" height="8" as="geometry" />
        </mxCell>
        <mxCell id="NWFrmzto-wJViv7szAEe-4" value="+ constructor(props)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="NWFrmzto-wJViv7szAEe-2" vertex="1">
          <mxGeometry y="34" width="300" height="26" as="geometry" />
        </mxCell>
        <mxCell id="NWFrmzto-wJViv7szAEe-7" value="+ render(): return JSX conatins {this.props.dataName} " style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="NWFrmzto-wJViv7szAEe-2" vertex="1">
          <mxGeometry y="60" width="300" height="26" as="geometry" />
        </mxCell>
        <mxCell id="NWFrmzto-wJViv7szAEe-8" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="NWFrmzto-wJViv7szAEe-2" target="NWFrmzto-wJViv7szAEe-1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="377.5" y="430" as="sourcePoint" />
            <mxPoint x="427.5" y="380" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-1" value="this.state={dataName: initialValue}&lt;br&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="370" y="459.01" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-3" value="MyApp" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
          <mxGeometry x="110" y="400" width="260" height="130" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="wXwnY5n5MDEPIa2ir7WA-3" vertex="1">
          <mxGeometry y="26" width="260" height="8" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-5" value="+ constructor(props)" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="wXwnY5n5MDEPIa2ir7WA-3" vertex="1">
          <mxGeometry y="34" width="260" height="26" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-6" value="+ render(): return JSX conatins&#xa; &lt;Navbar dataName={this.state.dataName} /&gt; " style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="wXwnY5n5MDEPIa2ir7WA-3" vertex="1">
          <mxGeometry y="60" width="260" height="70" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-7" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(248, 249, 250); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;constructor(props)&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="370" y="439.01" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-10" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="wXwnY5n5MDEPIa2ir7WA-3" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="570" y="240" as="sourcePoint" />
            <mxPoint x="360" y="160" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-11" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="320" y="570" width="260" height="200" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-9" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="387.5" y="680" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-12" value="stateful parent" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="520" y="740" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-13" value="child" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="447.5" y="710" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-14" value="state: {}" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="410" y="600" width="75" height="30" as="geometry" />
        </mxCell>
        <mxCell id="wXwnY5n5MDEPIa2ir7WA-15" value="propertyName" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="wXwnY5n5MDEPIa2ir7WA-14" target="wXwnY5n5MDEPIa2ir7WA-9" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="490" y="560" as="sourcePoint" />
            <mxPoint x="650" y="560" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="QJcWjdx2GWE3j4iH3Xcx-1" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;&amp;nbsp;common pattern: stateful component renders child component and passes its state data as props to its child&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="110" y="790" width="530" height="30" as="geometry" />
        </mxCell>
        <mxCell id="QJcWjdx2GWE3j4iH3Xcx-2" value="&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box; font-family: Lato, sans-serif; font-size: 18px; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;unidirectional data flow&lt;/em&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="110" y="900" width="210" height="30" as="geometry" />
        </mxCell>
        <mxCell id="QJcWjdx2GWE3j4iH3Xcx-3" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;paradigms&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="860" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="QJcWjdx2GWE3j4iH3Xcx-4" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important; background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;complex stateful apps can be broken down into just a few, or maybe a single, stateful component.&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="950" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="QJcWjdx2GWE3j4iH3Xcx-5" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;principle of separating state logic from UI logic&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="117.5" y="1010" width="390" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="hRfSmZEhePaRggCXq42Y" name="13 - callback as props">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-1" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="160" y="390" width="470" height="230" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-2" value="MyApp" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="580" y="580" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-3" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="190" y="540" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-4" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="420" y="540" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-5" value="RenderInput" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="240" y="570" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-6" value="GetInput" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="480" y="570" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-7" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;text-decoration:underline;&quot;&gt;&lt;b&gt;state:{}&lt;/b&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;inputValue = &#39; &#39;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="320" y="410" width="100" height="50" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-8" value="handleChange()" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="1" vertex="1">
          <mxGeometry x="320" y="470" width="100" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-9" value="input" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;exitX=0;exitY=0.75;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="PGUFkmrnq8DaKPIn2mCM-7" target="PGUFkmrnq8DaKPIn2mCM-3" edge="1">
          <mxGeometry x="-0.1358" width="160" relative="1" as="geometry">
            <mxPoint x="350" y="530" as="sourcePoint" />
            <mxPoint x="510" y="530" as="targetPoint" />
            <Array as="points">
              <mxPoint x="250" y="448" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-11" value="input" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;exitX=1;exitY=0.75;exitDx=0;exitDy=0;entryX=0.75;entryY=0;entryDx=0;entryDy=0;" parent="1" source="PGUFkmrnq8DaKPIn2mCM-7" target="PGUFkmrnq8DaKPIn2mCM-4" edge="1">
          <mxGeometry x="-0.2105" width="160" relative="1" as="geometry">
            <mxPoint x="350" y="530" as="sourcePoint" />
            <mxPoint x="510" y="530" as="targetPoint" />
            <Array as="points">
              <mxPoint x="510" y="448" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-12" value="handleChange" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;" parent="1" source="PGUFkmrnq8DaKPIn2mCM-8" target="PGUFkmrnq8DaKPIn2mCM-4" edge="1">
          <mxGeometry x="-0.3103" y="-3" width="160" relative="1" as="geometry">
            <mxPoint x="350" y="530" as="sourcePoint" />
            <mxPoint x="510" y="530" as="targetPoint" />
            <Array as="points">
              <mxPoint x="450" y="483" />
            </Array>
            <mxPoint x="3" y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-13" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;&lt;font style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp;pass handler functions or any method that&#39;s defined on a React component to a child component&lt;/font&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="160" y="90" width="550" height="30" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-14" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="160" y="150" width="330" height="190" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-15" value="Stateful parent" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="430" y="300" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-17" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="270" y="260" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-19" value="child" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="330" y="290" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-21" value="methodName()" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="1" vertex="1">
          <mxGeometry x="170" y="190" width="100" height="26" as="geometry" />
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-24" value="propsMethodName" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;" parent="1" source="PGUFkmrnq8DaKPIn2mCM-21" target="PGUFkmrnq8DaKPIn2mCM-17" edge="1">
          <mxGeometry x="-0.3103" y="-3" width="160" relative="1" as="geometry">
            <mxPoint x="200" y="250" as="sourcePoint" />
            <mxPoint x="360" y="250" as="targetPoint" />
            <Array as="points">
              <mxPoint x="300" y="203" />
            </Array>
            <mxPoint x="3" y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="PGUFkmrnq8DaKPIn2mCM-25" value="input[value, onChange]" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=12;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="420" y="550" width="70" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="anxvKKdOc8HtBPLf7iu9" name="14 lifecycle methods">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="z4OCM8IzL0xE004Xel59-2" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&lt;span style=&quot;&quot;&gt;catch components&amp;nbsp;at certain points in time:&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="190" y="200" width="350" height="40" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-3" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;componentWillUnmount()&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="510" y="510" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-4" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; text-align: start; --darkreader-inline-bgcolor:transparent;&quot;&gt;componentWillMount()&lt;/span&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontSize=12;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="510" y="240" width="190" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-6" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;before they are rendered&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="230" y="240" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-7" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; data-darkreader-inline-color=&quot;&quot; style=&quot;color: rgb(0, 0, 0); font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; --darkreader-inline-color:#e8e6e3; --darkreader-inline-bgcolor:transparent; display: inline !important;&quot;&gt;before they update&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="230" y="350" width="180" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-8" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;before they receive props&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="230" y="460" width="230" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-9" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;before they unmount&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="230" y="510" width="190" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-10" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;componentDidMount()&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="510" y="290" width="190" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-11" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;shouldComponentUpdate()&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="510" y="350" width="230" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-12" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;after they are rendered&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="230" y="290" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-13" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;after they update&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="230" y="410" width="180" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-14" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;componentDidUpdate()&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="510" y="410" width="200" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-15" value="&lt;font data-darkreader-inline-bgcolor=&quot;&quot; data-darkreader-inline-color=&quot;&quot; style=&quot;font-size: 16px; --darkreader-inline-color:#e8e6e3; --darkreader-inline-bgcolor:transparent;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;render():&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Lato, sans-serif;&quot;&gt;being mounted&lt;/span&gt;&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;fontSize=12;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="380" y="270" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-16" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16.2px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;setState()&lt;/font&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=16;fontColor=#FFFFFF;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="80" y="270" width="110" height="30" as="geometry" />
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-17" value="" style="endArrow=classic;html=1;rounded=0;fontSize=16;fontColor=#FFFFFF;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;labelBackgroundColor=none;" parent="1" source="z4OCM8IzL0xE004Xel59-16" target="z4OCM8IzL0xE004Xel59-15" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="430" y="370" as="sourcePoint" />
            <mxPoint x="480" y="320" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="z4OCM8IzL0xE004Xel59-18" value="&lt;span style=&quot;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;trigger&lt;/font&gt;&lt;/span&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontSize=16;fontColor=#FFFFFF;" parent="1" vertex="1">
          <mxGeometry x="260" y="260" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-1" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; --darkreader-inline-bgcolor:#181a1b; display: inline !important;&quot;&gt;Add Event Listeners&amp;nbsp;&lt;/span&gt;&lt;span data-darkreader-inline-bgcolor=&quot;&quot; style=&quot;text-align: center; --darkreader-inline-bgcolor:#181a1b;&quot;&gt;to the window or document directly&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="160" y="590" width="370" height="30" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-3" value="at phase after render()" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="200" y="670" width="130" height="20" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-4" value="inside componentWillMount()" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="440" y="750" width="160" height="25" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-5" value="Add" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="200" y="640" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-6" value="Remove (clean up before they&#39;re unmounted and destroyed)" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="200" y="720" width="330" height="30" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-8" value="at phase before render()" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="200" y="752.5" width="140" height="20" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-9" value="inside componentDidMount()" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="440" y="667.5" width="160" height="25" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-10" value="need to add this to refer to the instance handler" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="200" y="800" width="260" height="30" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-11" value="&lt;span style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;Optimize Re-Renders with shouldComponentUpdate&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="160" y="840" width="410" height="30" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-13" value="default behavior: comp re-renders when it receives new state or new props, even if props hasn&#39;t change" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="870" width="560" height="30" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-14" value="Q: what about its child comp receive new state or new props, does the child comp need to re-render or not" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="900" width="570" height="30" as="geometry" />
        </mxCell>
        <mxCell id="iaXi9jv9LKuj_cYekPXS-15" value="A: shouldComponentUpdate(nextProps, nextState){... return [boolean]}" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="930" width="380" height="30" as="geometry" />
        </mxCell>
        <mxCell id="btvt_6-VG0NEvzY80m3g-1" value="special methods that&amp;nbsp; perform actions at specific points in the lifecycle of a component" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=none;" parent="1" vertex="1">
          <mxGeometry x="170" y="120" width="490" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="CT9QGEoEZUK2yq5GaL7J" name="15 - Inline Style">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="clqeBowXQY5voX5hQYpl-1" value="Stylesheet: use className" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="200" y="250" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="clqeBowXQY5voX5hQYpl-2" value="Two ways to add styles in React" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="220" width="180" height="30" as="geometry" />
        </mxCell>
        <mxCell id="clqeBowXQY5voX5hQYpl-3" value="Inline styles:&amp;nbsp; style={[Obj={...}]}, similar in HTML with style attribute in the tag&amp;nbsp;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="200" y="280" width="420" height="30" as="geometry" />
        </mxCell>
        <mxCell id="clqeBowXQY5voX5hQYpl-4" value="Notes on Obj:&lt;br&gt;1. &#39;-&#39; is not valid in Object so use camelCase for CSS property name&lt;br&gt;2. property value other than length values that default to px should be wrapped in quotes" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="240" y="320" width="500" height="60" as="geometry" />
        </mxCell>
        <mxCell id="clqeBowXQY5voX5hQYpl-5" value="const styles = {...}" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="240" y="400" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="clqeBowXQY5voX5hQYpl-6" value="render( ){&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;return (&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;div style={styles}&amp;gt; Style Me! &amp;lt;/div&amp;gt;&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;)&lt;br&gt;}" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="240" y="440" width="250" height="80" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="UiUmIbUp9i-1JlIG1mgL" name="16 Conditional Rendering in render()">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="QL4-WK4M15Rgheicwmn2-2" value="&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;inject JS in JSX code using curly braces,&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;box-sizing: border-box; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; padding: 2px 4px; border-radius: 0px; overflow-wrap: anywhere; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; text-shadow: none !important;&quot;&gt;{ } to: access/pass props, access state, insert comments and style components&lt;/code&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="120" width="570" height="50" as="geometry" />
        </mxCell>
        <mxCell id="QL4-WK4M15Rgheicwmn2-3" value="Conditional rendering inside render():" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="190" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="QL4-WK4M15Rgheicwmn2-4" value="if(condition) {&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;return (...)&lt;br&gt;}else{&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;return(...)&lt;br&gt;}" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="280" width="110" height="100" as="geometry" />
        </mxCell>
        <mxCell id="QL4-WK4M15Rgheicwmn2-5" value="Outside return" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="240" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="QL4-WK4M15Rgheicwmn2-7" value="return (&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;{condition ? expressionIfTrue : expressionIfFalse}&lt;br&gt;)" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="460" width="360" height="70" as="geometry" />
        </mxCell>
        <mxCell id="QL4-WK4M15Rgheicwmn2-8" value="Inside return" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="400" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="QL4-WK4M15Rgheicwmn2-9" value="const expression = ....&lt;br&gt;...&lt;br&gt;return (&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;...&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;&amp;lt;Child propsDataName={expression} /&amp;gt;&lt;br&gt;)" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="640" width="340" height="90" as="geometry" />
        </mxCell>
        <mxCell id="QL4-WK4M15Rgheicwmn2-10" value="return (&lt;br&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;{condition ? expressionIfTrue : (condition ? expressionIfTrue : expressionIfFalse)}&lt;br&gt;)" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="550" width="570" height="70" as="geometry" />
        </mxCell>
        <mxCell id="oWXRHxtKt8P_ciON_xjb-1" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; data-darkreader-inline-color=&quot;&quot; style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; --darkreader-inline-color:#e2e0dc; --darkreader-inline-bgcolor:transparent; background-color: transparent; display: inline !important;&quot;&gt;Inline CSS Conditionally Based on Component State&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="750" width="460" height="30" as="geometry" />
        </mxCell>
        <mxCell id="oWXRHxtKt8P_ciON_xjb-2" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;When set a style object based on a condition, you describe how the UI should look as a function of the application&#39;s state.&lt;/font&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="800" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="oWXRHxtKt8P_ciON_xjb-3" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;There is a clear flow of information that only moves in one direction.&amp;nbsp;&lt;/font&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="850" width="550" height="40" as="geometry" />
        </mxCell>
        <mxCell id="oWXRHxtKt8P_ciON_xjb-4" value="let styles = {...}" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="900" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="oWXRHxtKt8P_ciON_xjb-5" value="Text" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="270" y="620" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="oWXRHxtKt8P_ciON_xjb-6" value="styles.CSSProperty = condition(based on this.state.dataName) ? style1 : style2" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="940" width="500" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="EjZtajvOolZ5uZiX3Bq_" name="17 dynamic rendering">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="ADfVV3_jHaZmTzNEVdKV-1" value="&lt;span style=&quot;font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;Dynamically render&amp;nbsp;&lt;/span&gt;handles the unknown state (unknown number of elements)&lt;/font&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="110" width="530" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ADfVV3_jHaZmTzNEVdKV-3" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; data-darkreader-inline-color=&quot;&quot; style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; --darkreader-inline-color:#e2e0dc; --darkreader-inline-bgcolor:transparent; background-color: transparent; display: inline !important;&quot;&gt;Use Array.map() to Dynamically Render Elements&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="190" width="430" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ADfVV3_jHaZmTzNEVdKV-4" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; data-darkreader-inline-color=&quot;&quot; style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; --darkreader-inline-color:#e2e0dc; --darkreader-inline-bgcolor:transparent; background-color: transparent; display: inline !important;&quot;&gt;Use Array.filter() to Dynamically Filter an Array based on a condition&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="260" width="460" height="30" as="geometry" />
        </mxCell>
        <mxCell id="ADfVV3_jHaZmTzNEVdKV-5" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; data-darkreader-inline-color=&quot;&quot; style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; --darkreader-inline-color:#e2e0dc; --darkreader-inline-bgcolor:transparent; background-color: transparent; display: inline !important;&quot;&gt;Note&lt;br&gt;Give Sibling Elements a Unique Key Attribute&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="410" width="410" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="w_Gz0Jg6_12KtRALailk" name="18 Array.map()">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="7n3T3W2b3gP24sk8liZP-1" value="data flow" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="420" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-2" value="input string in textarea" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="470" width="80" height="60" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-3" value="onChange" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="220" y="499.5" as="sourcePoint" />
            <mxPoint x="280" y="500" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-4" value="userInput" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="290" y="485" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-5" value="state" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" edge="1">
          <mxGeometry x="-0.062" y="17" width="160" relative="1" as="geometry">
            <mxPoint x="370" y="489.5" as="sourcePoint" />
            <mxPoint x="450" y="470" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-6" value="textarea[value]" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="480" y="430" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-7" value="onClick" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" edge="1">
          <mxGeometry y="-30" width="160" relative="1" as="geometry">
            <mxPoint x="370" y="500" as="sourcePoint" />
            <mxPoint x="450" y="500" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-8" value="toDoList" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="480" y="480" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-9" value="items" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" edge="1">
          <mxGeometry x="0.1111" y="10" width="160" relative="1" as="geometry">
            <mxPoint x="560" y="499" as="sourcePoint" />
            <mxPoint x="630" y="499" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-10" value="items" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="640" y="485" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-12" value="" style="strokeWidth=1;shadow=0;dashed=0;align=center;html=1;shape=mxgraph.mockup.containers.browserWindow;rSize=0;strokeColor=#666666;strokeColor2=#008cff;strokeColor3=#c4c4c4;mainText=,;recursiveResize=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="220" y="130" width="410" height="260" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-13" value="Page 1" style="strokeWidth=1;shadow=0;dashed=0;align=center;html=1;shape=mxgraph.mockup.containers.anchor;fontSize=17;fontColor=#666666;align=left;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;" parent="7n3T3W2b3gP24sk8liZP-12" vertex="1">
          <mxGeometry x="60" y="12" width="110" height="26" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-14" value="https://www.draw.io" style="strokeWidth=1;shadow=0;dashed=0;align=center;html=1;shape=mxgraph.mockup.containers.anchor;rSize=0;fontSize=17;fontColor=#666666;align=left;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;" parent="7n3T3W2b3gP24sk8liZP-12" vertex="1">
          <mxGeometry x="130" y="60" width="250" height="26" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-15" value="" style="rounded=1;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-12" vertex="1">
          <mxGeometry x="135.25" y="120" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-16" value="textarea" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-12" vertex="1">
          <mxGeometry x="195.25" y="150" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-18" value="Submit" style="rounded=1;html=1;shadow=0;dashed=0;whiteSpace=wrap;fontSize=10;fillColor=#E6E6E6;align=center;strokeColor=#E6E6E6;fontColor=#333333;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;" parent="7n3T3W2b3gP24sk8liZP-12" vertex="1">
          <mxGeometry x="135.25" y="190" width="50.5" height="30" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-23" value="MyToDoList" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="220" y="590" width="160" height="314" as="geometry">
            <mxRectangle x="320" y="760" width="110" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-33" value="state" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-23" vertex="1">
          <mxGeometry y="26" width="160" height="24" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-24" value="+ toDoList: [ ]" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-23" vertex="1">
          <mxGeometry y="50" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-26" value="+ userInput: &#39; &#39;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-23" vertex="1">
          <mxGeometry y="76" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-25" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-23" vertex="1">
          <mxGeometry y="102" width="160" height="8" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-27" value="+ handleSubmit()&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-23" vertex="1">
          <mxGeometry y="110" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-28" value="+ handleChange()&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-23" vertex="1">
          <mxGeometry y="136" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-29" value="+ render()&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-23" vertex="1">
          <mxGeometry y="162" width="160" height="32" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-19" value="&amp;lt;textarea&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-23" vertex="1">
          <mxGeometry y="194" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-21" value="&amp;lt;button&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-23" vertex="1">
          <mxGeometry y="234" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-22" value="&amp;lt;ul {items}&amp;gt;" style="rounded=0;whiteSpace=wrap;html=1;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="7n3T3W2b3gP24sk8liZP-23" vertex="1">
          <mxGeometry y="274" width="160" height="40" as="geometry" />
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-32" value="value" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;fontFamily=Helvetica;fontSize=14;fontColor=#000000;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="7n3T3W2b3gP24sk8liZP-23" source="7n3T3W2b3gP24sk8liZP-26" target="7n3T3W2b3gP24sk8liZP-19" edge="1">
          <mxGeometry x="-0.6098" y="-5" width="160" relative="1" as="geometry">
            <mxPoint x="20" y="200" as="sourcePoint" />
            <mxPoint x="-40" y="220" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-40" y="89" />
              <mxPoint x="-40" y="214" />
            </Array>
            <mxPoint x="5" y="-5" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-35" value="onClick" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;fontFamily=Helvetica;fontSize=14;fontColor=#000000;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="7n3T3W2b3gP24sk8liZP-23" source="7n3T3W2b3gP24sk8liZP-27" target="7n3T3W2b3gP24sk8liZP-21" edge="1">
          <mxGeometry x="-0.4212" y="-13" width="160" relative="1" as="geometry">
            <mxPoint x="20" y="200" as="sourcePoint" />
            <mxPoint x="250" y="280" as="targetPoint" />
            <Array as="points">
              <mxPoint x="250" y="123" />
              <mxPoint x="250" y="254" />
            </Array>
            <mxPoint x="13" y="-13" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-36" value="Array map to &amp;lt;li&amp;gt;" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;fontFamily=Helvetica;fontSize=14;fontColor=#000000;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="7n3T3W2b3gP24sk8liZP-23" source="7n3T3W2b3gP24sk8liZP-24" target="7n3T3W2b3gP24sk8liZP-22" edge="1">
          <mxGeometry x="-0.4192" y="-13" width="160" relative="1" as="geometry">
            <mxPoint x="20" y="200" as="sourcePoint" />
            <mxPoint x="320" y="320" as="targetPoint" />
            <Array as="points">
              <mxPoint x="320" y="63" />
              <mxPoint x="320" y="294" />
            </Array>
            <mxPoint x="13" y="-13" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="7n3T3W2b3gP24sk8liZP-34" value="onChange" style="edgeStyle=none;html=1;endArrow=open;endSize=12;verticalAlign=bottom;rounded=0;fontFamily=Helvetica;fontSize=14;fontColor=#000000;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="7n3T3W2b3gP24sk8liZP-28" edge="1">
          <mxGeometry x="-0.4665" width="160" relative="1" as="geometry">
            <mxPoint x="480" y="710" as="sourcePoint" />
            <mxPoint x="380" y="810" as="targetPoint" />
            <Array as="points">
              <mxPoint x="420" y="740" />
              <mxPoint x="420" y="810" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="l-mLY2M_vPwysKiPpFLp-1" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; data-darkreader-inline-color=&quot;&quot; style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; --darkreader-inline-color:#e2e0dc; --darkreader-inline-bgcolor:transparent; background-color: transparent; display: inline !important;&quot;&gt;Give Sibling Elements a Unique Key Attribute, for example :&amp;nbsp;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="555" y="660" width="220" height="70" as="geometry" />
        </mxCell>
        <mxCell id="l-mLY2M_vPwysKiPpFLp-2" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&amp;lt;li key={item}&amp;gt;{item}&amp;lt;/li&amp;gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="555" y="760" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="E5e8_fgSe9kf5gn0Gfse-1" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; data-darkreader-inline-color=&quot;&quot; style=&quot;color: rgb(245, 246, 247); font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; --darkreader-inline-color:#e2e0dc; --darkreader-inline-bgcolor:transparent; background-color: transparent; display: inline !important;&quot;&gt;&amp;nbsp;Array.map()&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="70" width="130" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="G98ba0XIU9EDNSnD6c8p" name="19 Array.filter()">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="0uskw0s78-HSVAbjQa9g-1" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; data-darkreader-inline-color=&quot;&quot; style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; --darkreader-inline-color:#e2e0dc; --darkreader-inline-bgcolor:transparent; background-color: transparent; display: inline !important;&quot;&gt;Array.filter()&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="70" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="0uskw0s78-HSVAbjQa9g-2" value="users=[ {}, {}, {},...]" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="120" width="130" height="50" as="geometry" />
        </mxCell>
        <mxCell id="0uskw0s78-HSVAbjQa9g-4" value="first: use array.filter(function) to return the item that meets the condition as an&amp;nbsp; array" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="190" width="520" height="30" as="geometry" />
        </mxCell>
        <mxCell id="0uskw0s78-HSVAbjQa9g-5" value="then: use array.map(functional component) to dynamically render the elements" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="230" width="490" height="30" as="geometry" />
        </mxCell>
        <mxCell id="0uskw0s78-HSVAbjQa9g-6" value="remember to set the key on each item with a unique value" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="120" y="280" width="370" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="fofzj7kYE4CeSv9VAddH" name="20 renderToString">
    <mxGraphModel dx="1212" dy="737" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="-pJLLDCO7WSkSwBI96md-1" value="&lt;span data-darkreader-inline-bgcolor=&quot;&quot; data-darkreader-inline-color=&quot;&quot; style=&quot;font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 700; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; --darkreader-inline-color:#e2e0dc; --darkreader-inline-bgcolor:transparent; background-color: transparent; display: inline !important;&quot;&gt;Render React on the Server with renderToString&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="80" y="80" width="430" height="30" as="geometry" />
        </mxCell>
        <mxCell id="-pJLLDCO7WSkSwBI96md-2" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-size: 18px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;&amp;nbsp;two key reasons:&amp;nbsp;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="100" y="150" width="170" height="30" as="geometry" />
        </mxCell>
        <mxCell id="-pJLLDCO7WSkSwBI96md-3" value="First, rendering on the client is not ideal for search engine to index the content&amp;nbsp;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=14;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="210" width="490" height="30" as="geometry" />
        </mxCell>
        <mxCell id="-pJLLDCO7WSkSwBI96md-4" value="&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; background-color: rgb(255, 255, 255); display: inline !important;&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;Second, this creates a faster initial page load experience because the rendered HTML is smaller than the JavaScript code of the entire app&lt;/font&gt;&lt;/span&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="260" width="550" height="50" as="geometry" />
        </mxCell>
        <mxCell id="-pJLLDCO7WSkSwBI96md-5" value="&lt;div style=&quot;font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-weight: normal; font-size: 18px; line-height: 24px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span data-darkreader-inline-bgcolor=&quot;&quot; style=&quot;background-color: transparent; --darkreader-inline-bgcolor:transparent;&quot;&gt;&lt;span data-darkreader-inline-color=&quot;&quot; style=&quot;--darkreader-inline-color:#4fceb7;&quot;&gt;ReactDOMServer&lt;/span&gt;&lt;span data-darkreader-inline-color=&quot;&quot; style=&quot;--darkreader-inline-color:#87d5fe;&quot;&gt;.&lt;/span&gt;&lt;span data-darkreader-inline-color=&quot;&quot; style=&quot;--darkreader-inline-color:#cdc8c2;&quot;&gt;renderToString&lt;/span&gt;&lt;span data-darkreader-inline-color=&quot;&quot; style=&quot;--darkreader-inline-color:#ffff1a;&quot;&gt;(&lt;/span&gt;&lt;span data-darkreader-inline-color=&quot;&quot; style=&quot;--darkreader-inline-color:#d2cec8;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;font style=&quot;--darkreader-inline-color:#4fceb7;&quot; data-darkreader-inline-color=&quot;&quot;&gt;ReactComponentName&lt;/font&gt;&lt;span data-darkreader-inline-color=&quot;&quot; style=&quot;--darkreader-inline-color:#cdc8c2;&quot;&gt;&amp;nbsp;/&amp;gt;&lt;/span&gt;&lt;span data-darkreader-inline-color=&quot;&quot; style=&quot;--darkreader-inline-color:#ffff1a;&quot;&gt;)&lt;/span&gt;&lt;span data-darkreader-inline-color=&quot;&quot; style=&quot;--darkreader-inline-color:#87d5fe;&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;fontSize=14;fontFamily=Helvetica;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="160" y="340" width="410" height="40" as="geometry" />
        </mxCell>
        <mxCell id="ickKhA9uN1HfyBNY8n1l-1" value="&lt;font style=&quot;font-size: 14px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;pass a&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: Consolas, Menlo, Monaco, &amp;quot;Lucida Console&amp;quot;, &amp;quot;Liberation Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Bitstream Vera Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, monospace; background-image: ; background-position-x: ; background-position-y: ; background-size: ; background-repeat-x: ; background-repeat-y: ; background-attachment: ; background-origin: ; background-clip: ; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;class&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;to&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code style=&quot;font-family: Consolas, Menlo, Monaco, &amp;quot;Lucida Console&amp;quot;, &amp;quot;Liberation Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Bitstream Vera Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, monospace; background-image: ; background-position-x: ; background-position-y: ; background-size: ; background-repeat-x: ; background-repeat-y: ; background-attachment: ; background-origin: ; background-clip: ; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;.renderToString()&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;just like you would pass a component to a&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code style=&quot;font-family: Consolas, Menlo, Monaco, &amp;quot;Lucida Console&amp;quot;, &amp;quot;Liberation Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Bitstream Vera Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, monospace; background-image: ; background-position-x: ; background-position-y: ; background-size: ; background-repeat-x: ; background-repeat-y: ; background-attachment: ; background-origin: ; background-clip: ; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;render&lt;/code&gt;&lt;span style=&quot;font-family: Lato, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;&amp;nbsp;method.&lt;/span&gt;&lt;/font&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="160" y="410" width="550" height="40" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
